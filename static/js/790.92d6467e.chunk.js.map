{"version":3,"file":"static/js/790.92d6467e.chunk.js","mappings":"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","sources":["Components/Header/Login/GGLogin.jsx","Components/Header/Login/firebaseConfig.jsx","Components/Header/Login/RegisterForm.jsx","Components/Header/Login/LoginPage.jsx"],"sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport { useGoogleLogin } from \"@react-oauth/google\";\nimport { gapi } from \"gapi-script\";\nimport axios from \"axios\";\nimport { UserContext } from \"./UserContext\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const clientID =\n  \"955907912121-a20eup8a861i31euts7sdp2nqq6dgmot.apps.googleusercontent.com\";\n\nfunction GGLogin() {\n  const { login } = useContext(UserContext);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    function start() {\n      gapi.client.init({\n        clientId: clientID,\n        scope: \"\",\n      });\n    }\n    gapi.load(\"client:auth2\", start);\n  }, []);\n\n  const googleLogin = useGoogleLogin({\n    onSuccess: async (tokenResponse) => {\n      try {\n        const response = await axios.get(\n          \"https://www.googleapis.com/oauth2/v3/userinfo\",\n          {\n            headers: {\n              Authorization: `Bearer ${tokenResponse.access_token}`,\n            },\n          }\n        );\n        const userData = response.data;\n        // Update local storage\n        localStorage.setItem(\"userData\", JSON.stringify({ data: userData }));\n        localStorage.setItem(\"isLoggedIn\", \"true\");\n\n        // Update context state\n        login(userData);\n        navigate(\"/UserProfile\");\n      } catch (error) {\n        console.error(\"Failed to fetch user data: \", error);\n      }\n    },\n  });\n\n  return (\n    <div\n      onClick={() => googleLogin()}\n      className=\"bg-black text-center text-white w-[16vw] font-semibold px-4 py-2 hover:bg-white hover:text-black border-black border-solid border-[0.1em] cursor-pointer transition-colors duration-500\"\n    >\n      <div className=\"font-serif\">Login With Google</div>\n    </div>\n  );\n}\n\nexport default GGLogin;\n","// src/firebaseConfig.jsx\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBI8gUVNR62q2fsKzQQYdMeUJch7HW3I08\",\n  authDomain: \"diamond-8583b.firebaseapp.com\",\n  projectId: \"diamond-8583b\",\n  storageBucket: \"diamond-8583b.appspot.com\",\n  messagingSenderId: \"730204751845\",\n  appId: \"1:730204751845:web:bc2a404f76fe2eb365510c\",\n  measurementId: \"G-R6M4E2F2G5\",\n};\n\n// Khởi tạo Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Khởi tạo Auth\nexport const auth = getAuth(app);\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  createUserWithEmailAndPassword,\n  sendEmailVerification,\n} from \"firebase/auth\";\n\nimport { auth } from \"./firebaseConfig\";\n\nexport const Input = ({\n  type,\n  label,\n  placeholder,\n  value,\n  onChange,\n  name,\n  error,\n}) => {\n  return (\n    <div className=\"\">\n      <label className=\"block mb-8\">\n        <span className=\"block text-sm text-zinc-700 opacity-60\">{label}</span>\n        <input\n          type={type}\n          required\n          placeholder={placeholder}\n          className=\"peer ... outline-none border-b-[0.1em] border-b-black bg-zinc-300 bg-opacity-0 w-full h-[2em]\"\n          value={value}\n          onChange={onChange}\n          name={name}\n        />\n        {error && <span className=\"text-red-500 text-xs\">{error}</span>}\n      </label>\n    </div>\n  );\n};\n\nexport default function RegisterForm() {\n  const [formData, setFormData] = useState({\n    Username: \"\",\n    Password: \"\",\n    FirstName: \"\",\n    LastName: \"\",\n    Gender: \"\",\n    Birthday: \"\",\n    Email: \"\",\n    PhoneNumber: \"\",\n    Address: \"\",\n  });\n  const [errors, setErrors] = useState({});\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [preferredLanguage, setPreferredLanguage] = useState(\"\");\n  const [marketingConsent, setMarketingConsent] = useState(false);\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    if (name === \"confirmPassword\") {\n      setConfirmPassword(value);\n    } else if (name === \"PreferredLanguage\") {\n      setPreferredLanguage(value);\n    } else if (name === \"marketingConsent\") {\n      setMarketingConsent(!marketingConsent);\n    } else {\n      setFormData({\n        ...formData,\n        [name]: type === \"checkbox\" ? checked : value,\n      });\n      setErrors({\n        ...errors,\n        [name]: \"\",\n      });\n    }\n  };\n\n  // Validation\n  const validate = () => {\n    const newErrors = {};\n    if (!formData.FirstName) newErrors.FirstName = \"First Name is required\";\n    if (!formData.LastName) newErrors.LastName = \"Last Name is required\";\n    if (!formData.Username) newErrors.Username = \"Username is required\";\n\n    // Email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!formData.Email) {\n      newErrors.Email = \"Email is required\";\n    } else if (!emailRegex.test(formData.Email)) {\n      newErrors.Email = \"Invalid email address\";\n    }\n\n    // Phone number validation\n    const phoneRegex = /^\\d{10,15}$/;\n    if (!formData.PhoneNumber) {\n      newErrors.PhoneNumber = \"Phone Number is required\";\n    } else if (!phoneRegex.test(formData.PhoneNumber)) {\n      newErrors.PhoneNumber = \"Invalid phone number\";\n    }\n\n    // Password validation\n    const passwordRegex = /^(?=.*[A-Z])(?=.*\\d).{5,}$/;\n    if (!formData.Password) {\n      newErrors.Password = \"Password is required\";\n    } else if (!passwordRegex.test(formData.Password)) {\n      newErrors.Password =\n        \"Password must be at least 5 characters long, contain at least one uppercase letter, and one number\";\n    }\n    if (formData.Password !== confirmPassword) {\n      newErrors.confirmPassword = \"Passwords do not match\";\n    }\n\n    return newErrors;\n  };\n\n  // On submit\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const newErrors = validate();\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n    try {\n      // Kiểm tra URL và endpoint API\n      const response = await axios.post(\n        \"https://localhost:7292/api/Accounts/register\",\n        formData\n      );\n      console.log(\"Registration successful!\", response.data);\n\n      // Tạo người dùng trên Firebase\n      const userCredential = await createUserWithEmailAndPassword(\n        auth,\n        formData.Email,\n        formData.Password\n      );\n      const user = userCredential.user;\n      await sendEmailVerification(user);\n      alert(\"Verification email sent. Please check your inbox.\");\n\n      // Chuyển hướng sau khi đăng ký thành công\n      window.location.reload();\n    } catch (error) {\n      console.error(\"Registration failed:\", error);\n      // Hiển thị thông báo lỗi cụ thể từ API\n      if (error.response && error.response.data) {\n        alert(`Registration failed: ${error.response.data.message}`);\n      } else {\n        alert(error.message);\n      }\n    }\n  };\n\n  return (\n    <div className=\"w-2/3 h-full bg-zinc-300 bg-opacity-15\">\n      <div className=\"flex justify-center font-serif text-sm\">\n        <div className=\"absolute top-10 font-serif flex items-center flex-col w-full\">\n          <div className=\"w-1/4 mb-4\">\n            <label htmlFor=\"\" className=\"text-zinc-700 opacity-60\">\n              Title\n            </label>\n            <div className=\"w-[70%] flex justify-between\">\n              <input\n                type=\"radio\"\n                name=\"Gender\"\n                value=\"Male\"\n                onChange={handleChange}\n              />\n              <label htmlFor=\"Mr\">Mr</label>\n              <input\n                type=\"radio\"\n                name=\"Gender\"\n                value=\"Female\"\n                onChange={handleChange}\n              />\n              <label htmlFor=\"Mrs\">Mrs</label>\n              <input\n                type=\"radio\"\n                name=\"Gender\"\n                value=\"Female\"\n                onChange={handleChange}\n              />\n              <label htmlFor=\"Miss\">Miss</label>\n            </div>\n          </div>\n\n          <form className=\"w-1/4\" onSubmit={handleSubmit}>\n            <Input\n              type=\"text\"\n              label=\"First Name*\"\n              placeholder=\"GIA\"\n              value={formData.FirstName}\n              onChange={handleChange}\n              name=\"FirstName\"\n              error={errors.FirstName}\n            />\n            <Input\n              type=\"text\"\n              label=\"Last Name*\"\n              placeholder=\"BAO\"\n              value={formData.LastName}\n              onChange={handleChange}\n              name=\"LastName\"\n              error={errors.LastName}\n            />\n\n            <div className=\"flex flex-col mb-3\">\n              <label\n                htmlFor=\"birthday\"\n                className=\"text-zinc-700 opacity-60 mb-2\"\n              >\n                Date Of Birth\n              </label>\n              <input\n                type=\"date\"\n                id=\"birthday\"\n                name=\"Birthday\"\n                max=\"2023-12-31\"\n                className=\"w-full outline-none bg-zinc-300 bg-opacity-0\"\n                value={formData.Birthday}\n                onChange={handleChange}\n              />\n              {errors.Birthday && (\n                <span className=\"text-red-500 text-xs\">{errors.Birthday}</span>\n              )}\n            </div>\n\n            <Input\n              type=\"text\"\n              label=\"Email*\"\n              placeholder=\"your@gmail.com\"\n              value={formData.Email}\n              onChange={handleChange}\n              name=\"Email\"\n              error={errors.Email}\n            />\n\n            <Input\n              type=\"text\"\n              label=\"Phone Number*\"\n              placeholder=\"0123456789\"\n              value={formData.PhoneNumber}\n              onChange={handleChange}\n              name=\"PhoneNumber\"\n              error={errors.PhoneNumber}\n            />\n\n            <Input\n              type=\"text\"\n              label=\"Username*\"\n              placeholder=\"your_username\"\n              value={formData.Username}\n              onChange={handleChange}\n              name=\"Username\"\n              error={errors.Username}\n            />\n\n            <Input\n              type=\"password\"\n              label=\"Password*\"\n              placeholder=\"*****\"\n              value={formData.Password}\n              onChange={handleChange}\n              name=\"Password\"\n              error={errors.Password}\n            />\n            <Input\n              type=\"password\"\n              label=\"Confirm Password*\"\n              placeholder=\"*****\"\n              value={confirmPassword}\n              onChange={handleChange}\n              name=\"confirmPassword\"\n              error={errors.confirmPassword}\n            />\n\n            <label className=\"\">Preferred Language</label>\n            <input\n              type=\"text\"\n              list=\"myList\"\n              className=\"w-full outline-none bg-zinc-300 bg-opacity-0\"\n              placeholder=\"English\"\n              value={preferredLanguage}\n              onChange={handleChange}\n              name=\"PreferredLanguage\"\n            />\n            <datalist id=\"myList\">\n              <option value=\"English\"></option>\n            </datalist>\n\n            <div className=\"mt-4 mb-4\">\n              For further information about how we use your personal\n              information, please see our Privacy Policy\n            </div>\n\n            <div className=\"\">\n              <input\n                type=\"checkbox\"\n                id=\"marketingConsent\"\n                name=\"marketingConsent\"\n                onChange={handleChange}\n                value={marketingConsent}\n              />\n              <label htmlFor=\"marketingConsent\" className=\"ml-3\">\n                I would also like to receive marketing information about\n                Eternity’s products or services.\n              </label>\n            </div>\n\n            <div className=\"w-full mt-10 flex justify-center items-center\">\n              <button\n                type=\"submit\"\n                className={`bg-black text-center text-white w-full font-semibold px-4 py-2 hover:bg-white\n                 hover:text-black border-black border-solid border-[0.1em] cursor-pointer transition-colors duration-500 ${\n                   marketingConsent\n                     ? \"opacity-100\"\n                     : \"opacity-50 pointer-events-none\"\n                 }`}\n              >\n                Create Account\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport RegisterForm, { Input } from \"./RegisterForm\";\nimport GGLogin from \"./GGLogin\";\nimport axios from \"axios\";\nimport { UserContext } from \"./UserContext\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function LoginPage() {\n  const [register, setRegister] = useState(false);\n  const [active, setActive] = useState(false);\n  const [forgotPass, setForgotPass] = useState(false);\n  const [overlay, setOverlay] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { login } = useContext(UserContext);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  });\n  const navigate = useNavigate();\n  const handleLogin = async (username, password) => {\n    try {\n      const response = await axios.post(\n        \"https://localhost:7292/api/Accounts/login\",\n        {\n          username,\n          password,\n        }\n      );\n      const userData = response.data.CustomerInfo;\n      const token = userData.Token;\n\n      // Update local storage\n      localStorage.setItem(\"userData\", JSON.stringify({ data: userData }));\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"isLoggedIn\", \"true\");\n\n      // Update context state\n      login(userData);\n      navigate(\"/UserProfile\");\n\n      console.log(\"Login successful!\");\n      console.log(response.data);\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleLogin(username, password);\n  };\n\n  axios.interceptors.request.use(\n    (config) => {\n      const token = localStorage.getItem(\"authToken\");\n      if (token) {\n        config.headers[\"Authorization\"] = `Bearer ${token}`;\n      }\n      return config;\n    },\n    (error) => {\n      return Promise.reject(error);\n    }\n  );\n\n  const toggleForgotPass = () => {\n    setForgotPass(!forgotPass);\n    setOverlay(!overlay);\n  };\n\n  return (\n    <div className=\"relative z-[0] pointer-events-auto w-[100vw] mt-16\">\n      <div className=\"w-full flex justify-center mb-8\">\n        <div className=\"w-1/2 flex justify-between\">\n          <div\n            onClick={() => {\n              setRegister(false);\n              setActive(false);\n            }}\n            className={`font-bold ${\n              active ? \"\" : \"underline\"\n            } hover:underline uppercase cursor-pointer text-[1.6em]`}\n          >\n            Already registed?\n          </div>\n          <div\n            onClick={() => {\n              setRegister(true);\n              setActive(true);\n            }}\n            className={`font-bold ${\n              active ? \"underline\" : \"\"\n            } hover:underline uppercase cursor-pointer text-[1.6em]`}\n          >\n            Create your account\n          </div>\n        </div>\n      </div>\n      {/* Login form */}\n      <div\n        className={`relative w-full flex justify-center ${\n          register ? \"\" : \"h-[70vh]\"\n        }`}\n      >\n        <div\n          className={`bg-zinc-300 bg-opacity-15 w-2/3 ${\n            register ? \"\" : \"\"\n          } flex justify-center`}\n        >\n          {/* Note */}\n          <div className={`font-serif mt-10 text-start w-[37.5%]`}>\n            {register\n              ? \"This space allows you to manage your personal information, e-Boutique orders, news updates and newsletter subscriptions.\"\n              : \"If you are already registed with Eternity, login here:\"}\n          </div>\n          <div\n            className={`absolute top-28 font-serif flex items-center flex-col w-full ${\n              register ? \"hidden\" : \"\"\n            }`}\n          >\n            {/* Form login */}\n            <form onSubmit={handleSubmit} className=\"w-1/4\">\n              <label className=\"block mb-8\">\n                <span className=\"block text-sm text-zinc-700 opacity-60\">\n                  Username\n                </span>\n                <input\n                  type=\"text\"\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                  required\n                  placeholder=\"your_username\"\n                  className=\"peer ... outline-none border-b-[0.1em] border-b-black bg-zinc-300 bg-opacity-0 w-full\"\n                />\n              </label>\n              <label className=\"block\">\n                <span className=\"block text-sm text-zinc-700 opacity-60\">\n                  Password\n                </span>\n                <input\n                  type=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                  placeholder=\"*******\"\n                  className=\"peer ... outline-none border-b-[0.1em] border-b-black bg-zinc-300 bg-opacity-0 w-full\"\n                />\n              </label>\n              <div\n                onClick={toggleForgotPass}\n                className=\"underline mt-8 cursor-pointer\"\n              >\n                Forgot your password?\n              </div>\n              <div className=\"mt-3\">\n                Read the Privacy Policy for further information\n              </div>\n              <div className=\"w-full mt-14 flex flex-col justify-center items-center\">\n                <button\n                  type=\"submit\"\n                  className=\"bg-black text-center text-white w-[63%] font-semibold px-4 py-2\n                 hover:bg-white hover:text-black border-black border-solid border-[0.1em] cursor-pointer transition-colors duration-500\"\n                >\n                  Login\n                </button>\n                <div className=\"mt-2\">Or</div>\n                <div className=\"mt-2\">\n                  <GGLogin />\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      {/* Register form */}\n      <div\n        className={`relative font-serif flex items-center flex-col w-full h-[60em] ${\n          register ? \"\" : \"hidden\"\n        }`}\n      >\n        <RegisterForm />\n      </div>\n      {/* Forgot password form */}\n      <div\n        className={`absolute top-1/3 left-1/2 -translate-x-1/2 -translate-y-1/2 w-[40vw] h-[45vh] bg-white border-t-green-700 border-t-[0.5em] ${\n          forgotPass ? \"opacity-100 scale-100\" : \"opacity-0 scale-0\"\n        } transition-all duration-500 flex flex-col items-center`}\n      >\n        <div className=\"relative w-full h-1/6 border-b-[0.1em] border-b-black border-opacity-15\">\n          <div className=\"flex h-full justify-center items-center text uppercase text-center text-[1.5em]\">\n            forgot your password\n          </div>\n          <div\n            onClick={toggleForgotPass}\n            className=\"absolute top-3 right-3 cursor-pointer opacity-50\"\n          >\n            <ion-icon size=\"large\" name=\"close-outline\"></ion-icon>\n          </div>\n        </div>\n\n        <div className=\"h-[70%] w-[64%] flex flex-col justify-around items-center\">\n          <div className=\"font-serif\">\n            Provide your account email address to receive an email to reset your\n            password.\n          </div>\n          <div className=\"w-full\">{Input(\"text\", \"\", \"Email address*\")}</div>\n          <div\n            className=\"bg-black text-center text-white w-[63%] font-semibold px-4 py-2 uppercase text\n                 hover:bg-white hover:text-black border-black border-solid border-[0.1em] cursor-pointer transition-colors duration-500\"\n          >\n            submit request\n          </div>\n        </div>\n      </div>\n      {/* Overlay */}\n      <div\n        className={`w-screen h-screen z-[-1] transition-opacity duration-500 ${\n          overlay ? \"opacity-100\" : \"opacity-0\"\n        } pointer-events-none bg-black bg-opacity-20 fixed top-0 left-0`}\n      ></div>\n    </div>\n  );\n}\n"],"names":["clientID","login","useContext","UserContext","navigate","useNavigate","useEffect","gapi","load","client","init","clientId","scope","googleLogin","useGoogleLogin","onSuccess","async","userData","axios","get","headers","Authorization","concat","tokenResponse","access_token","data","localStorage","setItem","JSON","stringify","error","console","_jsx","onClick","className","children","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","Input","_ref","type","label","placeholder","value","onChange","name","_jsxs","required","RegisterForm","formData","setFormData","useState","Username","Password","FirstName","LastName","Gender","Birthday","Email","PhoneNumber","Address","errors","setErrors","confirmPassword","setConfirmPassword","preferredLanguage","setPreferredLanguage","marketingConsent","setMarketingConsent","handleChange","e","checked","target","htmlFor","onSubmit","preventDefault","newErrors","validate","test","Object","keys","length","response","post","log","user","createUserWithEmailAndPassword","sendEmailVerification","alert","window","location","reload","message","id","max","list","LoginPage","register","setRegister","active","setActive","forgotPass","setForgotPass","overlay","setOverlay","username","setUsername","password","setPassword","scrollTo","interceptors","request","use","config","token","getItem","Promise","reject","toggleForgotPass","CustomerInfo","Token","handleLogin","GGLogin","size"],"sourceRoot":""}